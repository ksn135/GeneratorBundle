{% use '../CommonAdmin/ListAction/index.php.twig' %}
{% use '../CommonAdmin/ListAction/pager.php.twig' %}
{% use '../CommonAdmin/ListAction/sorter.php.twig' %}
{% use '../CommonAdmin/ListAction/filters.php.twig' %}
{% use '../CommonAdmin/ListAction/scopes.php.twig' %}
{% use '../CommonAdmin/csrf_protection.php.twig' %}
{% use '../CommonAdmin/security_action.php.twig' %}
<?php

namespace Admingenerated\{{ namespace_prefix }}{{ bundle_name }}\{{ builder.generator.GeneratedControllerFolder }};

{{ block('index_use') -}}
{{- block('security_use') }}
{{- block('csrf_protection_use') }}

use {{ builder.generator.baseController }} as BaseController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\RedirectResponse;

use Pagerfanta\Pagerfanta;
{% block pager_adapter -%}
use Pagerfanta\Adapter\DoctrineORMAdapter as PagerAdapter;
{% endblock %}

class ListController extends BaseController
{
    {{- block('index') -}}

    {{- block('pager') -}}

    {{- block('sorter') -}}

    {{- block('filters') -}}

    {{- block('scopes') -}}

    {{- block('security_check') -}}

    {{- block('csrf_check_token') }}

    /**
     * Get asession prefix
     *
     * @return string
     */
    protected function getSessionPrefix()
    {
        return '{{ namespace_prefix }}\{{ bundle_name }}\{{ builder.BaseGeneratorName }}';
    }

    /**
     * Get list index URL
     *
     * @return string
     */
    protected function getListUrl()
    {
        return $this->generateUrl("{{ builder.routePrefixWithSubfolder ~ '_' ~ bundle_name ~ (builder.BaseGeneratorName ? '_' ~ builder.BaseGeneratorName : '') ~ '_list' }}");
    }

    /**
     * Get list filters URL
     *
     * @return string
     */
    protected function getFiltersUrl()
    {
        return $this->generateUrl("{{ builder.routePrefixWithSubfolder ~ '_' ~ bundle_name ~ (builder.BaseGeneratorName ? '_' ~ builder.BaseGeneratorName : '') ~ '_filters' }}");
    }

    protected function getColumnsUrl()
    {
        return $this->generateUrl("{{ builder.routePrefixWithSubfolder ~ '_' ~ bundle_name ~ (builder.BaseGeneratorName ? '_' ~ builder.BaseGeneratorName : '') ~ '_columns' }}");
    }
    /**
     * Get additional parameters for rendering.
     *
     * @return array
     */
    protected function getAdditionalRenderParameters()
    {
        return array();
    }

    /**
     * Get groups.
     *
     * @return array
     */
    protected function getGroups()
    {
        return array();
    }

    /**
     * This function is for your convinience. Overwrite it if you need to
     * process the query.
     */
    protected function processQuery($query)
    {
        return $query;
    }

    {% block getQuery -%}
    protected function getQuery()
    {
        // ORM JOB
    }
    {% endblock %}

    {% block processSort -%}
    protected function processSort($query)
    {
       // ORM JOB
    }
    {% endblock %}

    {% block getFilterForm -%}
    protected function getFilterForm()
    {
        // ORM JOB
    }
    {% endblock %}

    {% block addJoinFor -%}
    protected function addJoinFor($table, $query)
    {
        // ORM JOB
    }
    {% endblock %}

    {% block processFilters -%}
    protected function processFilters($query)
    {
        // ORM JOB
    }
    {% endblock %}

    {% block processScopes -%}
    protected function processScopes($query)
    {
        // ORM JOB
    }
    {% endblock %}

    protected function getFiltersType()
    {
        $type = new FiltersType();
        $type->setSecurityContext($this->get('security.context'));

        return $type;
    }

    {% block getQueryFilter -%}
    protected function getQueryFilter()
    {
        // ORM JOB
    }
    {% endblock %}

}
