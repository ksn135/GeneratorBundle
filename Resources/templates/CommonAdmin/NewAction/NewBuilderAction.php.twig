{% use '../CommonAdmin/NewAction/index.php.twig' %}
{% use '../CommonAdmin/NewAction/create.php.twig' %}
{% use '../CommonAdmin/security_action.php.twig' %}
<?php

namespace Admingenerated\{{ namespace_prefix }}{{ bundle_name }}\{{ builder.generator.GeneratedControllerFolder }};

use {{ builder.generator.baseController }} as BaseController;
use Symfony\Component\HttpFoundation\RedirectResponse;

{{- block('index_use') -}}

{{- block('create_use') -}}

{{- block('security_use') }}

class NewController extends BaseController
{
    {{- block('index') -}}

    {{- block('create') -}}

    {{- block('security_check') }}

    /**
     * Get list URL
     *
     * @return string
     */
    protected function getListUrl()
    {
        return $this->generateUrl("{{ builder.routePrefixWithSubfolder ~ '_' ~ bundle_name ~ (builder.BaseGeneratorName ? '_' ~ builder.BaseGeneratorName : '') ~ '_list' }}");
    }

    /**
     * Get new URL
     *
     * @return string
     */
    protected function getNewUrl()
    {
        return $this->generateUrl("{{ builder.routePrefixWithSubfolder }}_{{ bundle_name }}{{ builder.BaseGeneratorName ? "_" ~ builder.BaseGeneratorName : "" }}_new" );
    }

    /**
     * Get create URL
     *
     * @return string
     */
    protected function getCreateUrl()
    {
        return $this->generateUrl("{{ builder.routePrefixWithSubfolder }}_{{ bundle_name }}{{ builder.BaseGeneratorName ? "_" ~ builder.BaseGeneratorName : "" }}_create" );
    }

    /**
     * Get edit URL
     *
     * @return string
     */
    protected function getEditUrl($pk)
    {
        return $this->generateUrl("{{ builder.routePrefixWithSubfolder }}_{{ bundle_name }}{{ builder.BaseGeneratorName ? "_" ~ builder.BaseGeneratorName : "" }}_edit", array('pk' => $pk) );
    }

    /**
     * Get show URL
     *
     * @return string
     */
    protected function getShowUrl($pk)
    {
        return $this->generateUrl("{{ builder.routePrefixWithSubfolder }}_{{ bundle_name }}{{ builder.BaseGeneratorName ? "_" ~ builder.BaseGeneratorName : "" }}_show", array('pk' => $pk) );
    }

    /**
     * Get additional parameters for rendering.
     *
     * @param \{{ model }} ${{ builder.ModelClass }}
     * @return array
     */
    protected function getAdditionalRenderParameters(\{{ model }} ${{ builder.ModelClass }})
    {
        return array();
    }

    /**
     * Get groups.
     *
     * @param \{{ model }} ${{ builder.ModelClass }}
     * @return array
     */
    protected function getGroups(\{{ model }} ${{ builder.ModelClass }})
    {
        return array();
    }

    /**
     * Get optional form options.
     *
     * @param \{{ model }} ${{ builder.ModelClass }}
     * @return array
     */
    protected function getFormOptions(\{{ model }} ${{ builder.ModelClass }})
    {
        return array();
    }

    protected function getNewForm(\{{ model }} ${{ builder.ModelClass }})
    {
        return $this->createForm($this->getNewType(), ${{ builder.ModelClass }}, array_merge(
            $this->getFormOptions(${{ builder.ModelClass }}),
            array('groups' => $this->getGroups(${{ builder.ModelClass }}))
        ));
    }

    protected function getNewType()
    {
        $type = new NewType();
        $type->setSecurityContext($this->get('security.context'));

        return $type;
    }
    
    protected function getNewObject()
    {
        return new \{{ model }};
    }

    {% block saveObject -%}
    protected function saveObject(\{{ model }} ${{ builder.ModelClass }})
    {
        // ORM JOB
    }
    {% endblock %}
}
